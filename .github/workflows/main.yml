name: Build docker images & run tests

on:
  push:
    branches:
      # run for all pushes to master
      - master
    tags:
      # run for all pushes to any tags
      - "*"
  pull_request:
    # run for all opens/pushes/merges of PRs
    # to run on merge, we use `closed` in conjunction with
    # `if: github.event.pull_request.merged` in job
    types: [opened, reopened, synchronize, closed ]

jobs:
  #checkout:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v3

  #wasm-linux-clang:
  #  if: github.event.pull_request.merged == true
  #  runs-on: ubuntu-latest
  #  #needs: checkout
  #  #container: aztecprotocol/alpine-build-image
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v3
  #    #- name: Setup environment
  #    #  run: cd .circleci && source ./setup_env && cd ../
  #    - name: Build
  #      #run: cd .circleci && source ./setup_env && cd ../ && pwd && bash .circleci/cond_spot_run_build barretenberg-clang-linux-clang 64
  #      run: set -x && cd .circleci/ && source setup_env && cd ../ && bash .circleci/build barretenberg-wasm-linux-clang ignore_cache
  #
  #x86_64-linux-gcc:
  #  if: github.event.pull_request.merged == true
  #  runs-on: ubuntu-latest
  #  #needs: checkout
  #  #container: aztecprotocol/alpine-build-image
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v3
  #    #- name: Setup environment
  #    #  run: cd .circleci && source ./setup_env && cd ../
  #    - name: Build
  #      #run: cd .circleci && source ./setup_env && cd ../ && pwd && bash .circleci/cond_spot_run_build barretenberg-x86_64-linux-gcc 64
  #      run: set -x && cd .circleci/ && source setup_env && cd ../ && bash .circleci/build barretenberg-x86_64-linux-gcc ignore_cache
  #
  #x86_64-linux-clang:
  #  if: github.event.pull_request.merged == true
  #  runs-on: ubuntu-latest
  #  #needs: checkout
  #  #container: aztecprotocol/alpine-build-image
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v3
  #    #- name: Setup environment
  #    #  run: cd .circleci && source ./setup_env && cd ../
  #    - name: Build
  #      #run: cd .circleci && source ./setup_env && cd ../ && pwd && bash .circleci/cond_spot_run_build barretenberg-wasm-linux-clang 64
  #      run: set -x && cd .circleci/ && source setup_env && cd ../ && bash .circleci/build barretenberg-x86_64-linux-clang ignore_cache

  x86_64-linux-clang-assert:
    #if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    #needs: checkout
    #container: aztecprotocol/alpine-build-image
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup env and Build
        run: |
          
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          git_branch=${GITHUB_REF#refs/heads/}
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "git_hash: ${git_hash}"
          echo "GITHUB_REF: ${GITHUB_REF}"
          echo "git_branch: ${git_branch}"
          cd .circleci
          # need tag too
          source ./setup_env "$GITHUB_SHA" " " "$GITHUB_JOB" "git@github.com:$GITHUB_REPOSITORY" "$GITHUB_REF_NAME"
          cd ../
          #run: cd .circleci && source ./setup_env && cd ../ && pwd && bash .circleci/cond_spot_run_build barretenberg-x86_64-linux-clang-assert 64
          #set -x && cd .circleci/ && source setup_env && cd ../ && bash .circleci/build barretenberg-x86_64-linux-clang-assert ignore_cache

  #barretenberg-tests:
  #  #if: github.event.pull_request.merged == true
  #  runs-on: ubuntu-latest
  #  #needs: checkout
  #  #container: aztecprotocol/alpine-build-image
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v3
  #    #- name: Setup environment
  #    #  run: cd .circleci && source ./setup_env && cd ../
  #    - name: Build
  #      #run: cd .circleci && source ./setup_env && cd ../ && pwd && bash .circleci/cond_spot_run_build barretenberg-wasm-linux-clang 64
  #      run: set -x && cd .circleci/ && source setup_env && cd ../ && bash .circleci/build barretenberg-x86_64-linux-clang-assert ignore_cache && cd cpp && bash scripts/run_tests bb-tests



# When setting up builds, using `container: aztecprotocol/alpine-build-image` results in:
# ```
# fatal: detected dubious ownership in repository at '/__w/barretenberg/barretenberg'
# To add an exception for this directory, call:
#
#	  git config --global --add safe.directory /__w/barretenberg/barretenberg
# ```
#
# To work around this for now I had to remove `container: aztecprotocl/alpine-build-image`
#
# Things I tried that did not work:
# * revert to `actions/checkout@v2`
# * add the following to `uses: actions/checkout@v3` (or v2), but I don't totally follow what this does:
#   ```
#      with:
#        set-safe-directory: true
#        token: ${{ secrets.GITHUB_TOKEN }}
#   ```
# * manually run the following before the checkout step:
#   ```
#     run: |
#       apk update && apk add git
#       /usr/bin/git config --global --add safe.directory /__w/barretenberg/barretenberg
#   ```
